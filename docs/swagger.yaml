basePath: /
definitions:
  entity.BookID:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  entity.ForSwaggerBookStruct:
    properties:
      author:
        type: string
      isbn:
        type: string
      title:
        type: string
    required:
    - author
    - isbn
    - title
    type: object
  entity.ForSwaggerUserStruct:
    properties:
      nickname:
        type: string
      password:
        type: string
      username:
        type: string
      usersurname:
        type: string
    required:
    - nickname
    - password
    - username
    - usersurname
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.signInInput:
    properties:
      nickname:
        type: string
      password:
        type: string
    required:
    - nickname
    - password
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API server for Library
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  title: Library API
  version: "1.0"
paths:
  /api/book/:
    post:
      consumes:
      - application/json
      description: Adding book for user list
      operationId: add-book-for-user-list
      parameters:
      - description: book ID
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.BookID'
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Add book for user list
      tags:
      - books
  /api/book/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user book by ID in library
      operationId: delete-user-book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete user book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get book by ID in library
      operationId: get-book-by-ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get book by ID
      tags:
      - books
  /api/book/admin:
    post:
      consumes:
      - application/json
      description: Adding book to the library
      operationId: add-book
      parameters:
      - description: Book
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.ForSwaggerBookStruct'
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Add book
      tags:
      - books
  /api/book/all:
    get:
      consumes:
      - application/json
      description: Get all books in library
      operationId: get-all-books
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all books
      tags:
      - books
  /api/book/my:
    get:
      consumes:
      - application/json
      description: Get all user books in library
      operationId: get-user-books
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user books
      tags:
      - books
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: sign in
      operationId: authentification
      parameters:
      - description: user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Sign in
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.ForSwaggerUserStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Sign up
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
